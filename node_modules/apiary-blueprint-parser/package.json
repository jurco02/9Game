{
  "name": "apiary-blueprint-parser",
  "version": "0.3.0",
  "description": "Apiary blueprint parser",
  "homepage": "https://github.com/apiaryio/blueprint-parser",
  "author": {
    "name": "Apiary Ltd.",
    "email": "team@apiary.io",
    "url": "http://apiary.io/"
  },
  "files": [
    "CHANGELOG",
    "LICENSE",
    "README.md",
    "VERSION",
    "examples/example.apib",
    "lib/apiary-blueprint-parser.js",
    "lib/ast.js"
  ],
  "main": "lib/apiary-blueprint-parser",
  "devDependencies": {
    "coffee-script": "= 1.4.0",
    "pegjs": "= 0.7.0",
    "mocha": "= 1.7.1",
    "chai": "= 1.3.0"
  },
  "engines": {
    "node": ">= 0.6.18"
  },
  "readme": "Apiary Blueprint Parser\n=======================\n\nA JavaScript parser of [Apiary API blueprints](http://apiary.io/blueprint).\n\nInstallation\n------------\n\n### Node.js\n\n    $ npm install apiary-blueprint-parser\n\nDo not install the parser globally (using the `-g` option), otherwise you wonâ€™t be able to use the API.\n\n### Browser\n\nDownload the latest browser version of the parser from the Downloads section on\nGitHub.\n\nUsage\n-----\n\nIn Node.js, require the module:\n\n```javascript\nvar ApiaryBlueprintParser = require(\"apiary-blueprint-parser\");\n```\n\nIn browser, include the browser version of the parser in your web page or\napplication using the `<script>` tag. The parser will be available in the\n`ApiaryBlueprintParser` global object.\n\nTo parse an API blueprint, just call the `parse` method and pass the blueprint\nas a parameter. The method will return an object representing the parsed\nblueprint or throw an exception if the input is invalid:\n\n```javascript\nvar blueprint = ApiaryBlueprintParser.parse([\n  \"Root resource\",\n  \"GET /\",\n  \"< 200\"\n].join(\"\\n\"));\n\nvar resource = blueprint.sections[0].resources[0];\nconsole.log(resource.description)     // prints \"Root resource\"\nconsole.log(resource.method)          // prints \"GET\"\nconsole.log(resource.url)             // prints \"/\"\nconsole.log(resource.response.status) // prints \"200\"\n```\n\nSee the `src/ast.coffee` file to get an idea about returned objects and their\ncapabilities.\n\nThe exception thrown in case of error will contain `offset`, `line`, `column`,\n`expected`, `found` and `message` properties with more details about the error.\n\nCompatibility\n-------------\n\nThe parser should run well in the following environments:\n\n  * Node.js 0.6.18+\n  * IE 9+\n  * Firefox\n  * Chrome\n  * Safari\n  * Opera\n\nThe parser should also work in IE 8, but this is not fully tested because the\ntest suite runs correctly only in IE 9+.\n",
  "readmeFilename": "README.md",
  "_id": "apiary-blueprint-parser@0.3.0",
  "dist": {
    "shasum": "fa694ae2ecd6cec5d8e97bfce4c31d02cb8cf401"
  },
  "_from": "apiary-blueprint-parser@0.3.x",
  "_resolved": "https://registry.npmjs.org/apiary-blueprint-parser/-/apiary-blueprint-parser-0.3.0.tgz"
}
